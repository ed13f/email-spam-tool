{"version":3,"sources":["Context/index.js","components/WarningItem.js","components/WarningList.js","components/Highlighter/Highlighter.js","components/TestForm.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","Consumer","WarningItem","state","synonyms","showSynonyms","word","props","toggleSnyonyms","toggleOption","setState","prevState","stripUrlSlug","inputWord","inputString","forEach","index","includes","axios","get","this","then","res","persons","data","meaning","slice","catch","error","className","length","onClick","href","map","i","key","PureComponent","WarningList","componentDidMount","context","totalSpamTriggersDetected","Highlighter","highlightStyles","activeClassName","activeIndex","activeStyle","autoEscape","caseSensitive","findChunks","highlightClassName","highlightStyle","highlightTag","sanitize","searchWords","textToHighlight","unhighlightClassName","unhighlightStyle","rest","chunks","findAll","HighlightTag","highlightIndex","highlightClassNames","memoizedLowercaseProps","memoizeOne","object","mapped","toLowerCase","createElement","children","chunk","text","substr","start","end","highlight","highlightClass","isActive","Object","assign","style","propTypes","PropTypes","string","number","bool","func","oneOfType","node","arrayOf","instanceOf","RegExp","isRequired","TestForm","onChangeContent","e","preventDefault","target","value","handleContentTest","onChangeSubjectLine","handleSubjectTest","onChangeCta","handleCtaTest","subjectInputX","document","getElementById","scrollLeft","contentInputY","scrollTop","onSubmit","handleSubmit","fontWeight","latinize","subject","id","htmlFor","type","placeholder","subjectLine","onChange","name","autoComplete","maxLength","onScroll","handleSubjectScroll","content","rows","handleContentScroll","cta","handleCtaScroll","Component","Header","alt","src","isSafari","test","navigator","userAgent","vendor","setTimeout","alert","App","spamFilter","spamTriggersDetected","mobileShowList","inputs","spamWords","runSpamFilter","updateAllInputForSpam","input","handleMobileListToggle","showList","spamFilters","checkRemovedWords","wordRegExp","replace","exec","push","wordIndex","indexOf","splice","totalSpamWords","subjectSpamWords","checkSingleInputForSpam","concat","contentSpamWords","ctaSpamWords","uniqueNames","reduce","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.54387a18.chunk.js","sourcesContent":["import React from 'react';\n\nconst ScoreboardContext = React.createContext();\n\nexport const Provider = ScoreboardContext.Provider;\nexport const Consumer = ScoreboardContext.Consumer;","import React, { PureComponent } from 'react';\nimport axios from \"axios\"\n\n\nclass WarningItem extends PureComponent {\n\n\tstate = {\n\t\tsynonyms: [],\n\t\tshowSynonyms:false,\n\t\tword: this.props.word\n\t}\n\n\ttoggleSnyonyms = () =>{\n\t\tlet toggleOption = false\n\t\tif(this.state.showSynonyms){\n\t\t\ttoggleOption = false\n\t\t} else {\n\t\t\ttoggleOption = true\n\t\t}\n\t\tthis.setState(prevState => ({ showSynonyms: toggleOption }))\n\t}\n\n\tstripUrlSlug = (inputWord) =>{\n\t\tlet inputString = inputWord\n\t\tlet protectedSymbols = [\"#\",\"$\",\"%\"]\n\t\tprotectedSymbols.forEach((word, index) => {\n\t\t\tif(inputString.includes(word)){inputString = \"rico\"}\n\t\t})\n\t\treturn inputString\n\t}\n\n\tcomponentDidMount() {\n\t    axios.get(`https://api.dictionaryapi.dev/api/v1/entries/en/${this.state.word}`)\n\t      .then(res => {\n\t        const persons = res.data;\n\t        if(persons && persons !== null && persons !== false){ \n\t        \tlet meaning = persons[0][\"meaning\"]\n\t\t        let synonyms = []\n\t\t        if(meaning[\"adjective\"]){\n\t\t        \tsynonyms = meaning[\"adjective\"][0][\"synonyms\"]\n\t\t        } else if(meaning[\"verb\"]){\n\t\t        \tsynonyms = meaning[\"verb\"][0][\"synonyms\"]\n\t\t        } else if(meaning[\"noun\"]){\n\t\t        \tsynonyms = meaning[\"noun\"][0][\"synonyms\"]\n\t\t        } else if(meaning[\"transitive verb\"]){\n\t\t        \tsynonyms = meaning[\"transitive verb\"][0][\"synonyms\"]\n\t\t        } else if(meaning[\"cardinal number\"]){\n\t\t        \tsynonyms = meaning[\"cardinal number\"][0][\"synonyms\"]\n\t\t        }\n\t\t        synonyms = synonyms.slice(0,10)\n\t\t        this.setState( prevState => {\n\t\t\t      return {\n\t\t\t        synonyms: synonyms\n\t\t\t      }\n\t\t\t    })\n\t\t    }\n\t    })\n        .catch(error => {})\n\t}\n\n\trender(){\n\n\t\treturn (\n\t\t\t<li className={\"warning-item\" + (this.state.showSynonyms ? ' active' : '')}>\n\t\t\t{/*<li key={ this.state.synonyms ? this.state.synonyms.slice(-1)[0] + 1 : 0 } className={\"warning-item\" + (this.state.showSynonyms ? ' active' : '')}>*/}\n\t\t\t\t{ this.state.word }\n\t\t\t\t{ this.state.synonyms !== null && this.state.synonyms.length !== 0 ? <button onClick={this.toggleSnyonyms} className=\"warning-item__synonyms-button\" href=\"#\"><i className=\"fa fa-angle-down warning-item__icon\"></i></button> : null }\n\t\t\t\t<ul className=\"warning-item__list\">\n\t\t\t\t\t<li className=\"warning-item__title\">Synonyms:</li>\n\t\t\t\t\t{this.state.synonyms !== null && this.state.synonyms.length !== 0 ? this.state.synonyms.map( (word, i) => <li key={i} className=\"warning-item__item\">{word}</li> ): null}\n\t\t        </ul>\n\t\t\t</li>\t\t        \n\t\t)\n\t}\n}\n\nexport default WarningItem","import React, { PureComponent } from 'react';\n// import GameCard from './GameCard';\nimport { Consumer } from '../Context';\nimport WarningItem from './WarningItem'\n\n\nclass WarningList extends PureComponent {\n\tcomponentDidMount = () => {\n\n\t}\n\n\trender(){\n\n\t\treturn (\n\t\t\t<Consumer>\n\t    \t\t{ context => (\n\t    \t\t\t<div className=\"warning-list\">\n\t\t    \t\t\t<ul className=\"warning-list__list\">\n\t\t    \t\t\t\t{context.totalSpamTriggersDetected.length === 0 ? <li className=\"warning-list__empty-message\">Test your content</li> : context.totalSpamTriggersDetected.map( (word, i) => <WarningItem key={ word } word={word}/> ) }\n\t\t\t\t        </ul>\n\t\t\t\t\t</div>\n\t    \t\t)}\n\t    \t</Consumer>\n\t\t);\n\t}\n}\n\n\nexport default WarningList","/* @flow */\nimport { findAll } from 'highlight-words-core'\nimport PropTypes from 'prop-types'\nimport { createElement } from 'react'\nimport memoizeOne from 'memoize-one'\n\nHighlighter.propTypes = {\n  activeClassName: PropTypes.string,\n  activeIndex: PropTypes.number,\n  activeStyle: PropTypes.object,\n  autoEscape: PropTypes.bool,\n  className: PropTypes.string,\n  findChunks: PropTypes.func,\n  highlightClassName: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]),\n  highlightStyle: PropTypes.object,\n  highlightTag: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.string\n  ]),\n  sanitize: PropTypes.func,\n  searchWords: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(RegExp)\n    ])\n  ).isRequired,\n  textToHighlight: PropTypes.string.isRequired,\n  unhighlightClassName: PropTypes.string,\n  unhighlightStyle: PropTypes.object\n}\n\nexport default function Highlighter ({\n  activeClassName = '',\n  activeIndex = -1,\n  activeStyle,\n  autoEscape,\n  caseSensitive = false,\n  className,\n  findChunks,\n  highlightClassName = '',\n  highlightStyle = {},\n  highlightTag = 'mark',\n  sanitize,\n  searchWords,\n  textToHighlight,\n  unhighlightClassName = '',\n  unhighlightStyle,\n  ...rest\n}) {\n  const chunks = findAll({\n    autoEscape,\n    caseSensitive,\n    findChunks,\n    sanitize,\n    searchWords,\n    textToHighlight\n  })\n  const HighlightTag = highlightTag\n  let highlightIndex = -1\n  let highlightClassNames = ''\n  let highlightStyles\n\n  const lowercaseProps = object => {\n    const mapped = {}\n    for (let key in object) {\n      mapped[key.toLowerCase()] = object[key]\n    }\n    return mapped\n  }\n  const memoizedLowercaseProps = memoizeOne(lowercaseProps)\n\n  return createElement('div', {\n    className,\n    ...rest,\n    children: chunks.map((chunk, index) => {\n      const text = textToHighlight.substr(chunk.start, chunk.end - chunk.start)\n\n      if (chunk.highlight) {\n        highlightIndex++\n\n        let highlightClass\n        if (typeof highlightClassName === 'object') {\n          if (!caseSensitive) {\n            highlightClassName = memoizedLowercaseProps(highlightClassName)\n            highlightClass = highlightClassName[text.toLowerCase()]\n          } else {\n            highlightClass = highlightClassName[text]\n          }\n        } else {\n          highlightClass = highlightClassName\n        }\n\n        const isActive = highlightIndex === +activeIndex\n\n        highlightClassNames = `${highlightClass} ${isActive ? activeClassName : ''}`\n        highlightStyles = isActive === true && activeStyle != null\n          ? Object.assign({}, highlightStyle, activeStyle)\n          : highlightStyle\n\n        const props = {\n          children: text,\n          className: highlightClassNames,\n          key: index,\n          style: highlightStyles\n        }\n\n        if (typeof HighlightTag !== 'string') {\n          props.highlightIndex = highlightIndex\n        }\n\n        return createElement(HighlightTag, props)\n      } else {\n        return createElement('span', {\n          children: text,\n          className: unhighlightClassName,\n          key: index,\n          style: unhighlightStyle\n        })\n      }\n    })\n  })\n}\n","import React, { Component } from 'react';\nimport latinize from 'latinize'\nimport { Consumer } from '../Context';\nimport Highlighter from './Highlighter/Highlighter'\n\n\nclass TestForm extends Component{\n\n\thandleSubjectScroll() {\n\t\tlet subjectInput = document.getElementById(\"subject-input\")\n\t\tlet subjectInputX = subjectInput.scrollLeft\n\t\tdocument.getElementById(\"subject-screen\").scrollLeft = subjectInputX\n\t}\n\thandleContentScroll() {\n\t\tlet contentInput = document.getElementById(\"content-input\")\n\t\tlet contentInputY = contentInput.scrollTop\n\t\tdocument.getElementById(\"content-screen\").scrollTop = contentInputY\n\t}\n\thandleCtaScroll() {\n\t\tlet subjectInput = document.getElementById(\"cta-input\")\n\t\tlet subjectInputX = subjectInput.scrollLeft\n\t\tdocument.getElementById(\"cta-screen\").scrollLeft = subjectInputX\n\t}\n\n\tonChangeContent = (e) => {\n\t\te.preventDefault();\n\t\tlet data = e.target.value\n\t\tthis.props.handleContentTest(data)\n\t}\n\n\tonChangeSubjectLine = (e) => {\n\t\te.preventDefault();\n\t\tlet data = e.target.value\n\t\tthis.props.handleSubjectTest(data)\n\t}\n\tonChangeCta = (e) => {\n\t\te.preventDefault();\n\t\tlet data = e.target.value\n\t\tthis.props.handleCtaTest(data)\n\t}\n\n\trender(){\n\n\t\treturn(\n\n\t\t\t<Consumer>\n\t\t\t\t{context => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<form className=\"form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<div className=\"form__row\">\n\t\t\t\t\t\t\t\t<div className=\"form__highlighter-wrapper\">\n\t\t\t\t\t\t\t\t\t<Highlighter\n\t\t\t\t\t\t\t          activeClassName=\"highlighter__active\"\n\t\t\t\t\t\t\t          activeIndex={-1}\n\t\t\t\t\t\t\t          caseSensitive={false}\n\t\t\t\t\t\t\t          className=\"form__highlight-screen form__highlight-screen--text\"\n\t\t\t\t\t\t\t          highlightClassName=\"highlighter__highlight\"\n\t\t\t\t\t\t\t          highlightStyle={{ fontWeight: 'normal' }}\n\t\t\t\t\t\t\t          sanitize={latinize}\n\t\t\t\t\t\t\t          searchWords={this.props.totalSpamTriggersDetected}\n\t\t\t\t\t\t\t          textToHighlight={this.props.subject}\n\t\t\t\t\t\t\t          id=\"subject-screen\"\n\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t\t    </div> \n\t\t\t\t\t\t\t\t<div className=\"form__column\">\n\t\t\t\t\t\t\t\t\t<label className=\"form__label h2\" htmlFor=\"subjectLine\">Subject Line</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form__input\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your subject here...\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.context.subjectLine}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeSubjectLine}\n\t\t\t\t\t\t\t\t\t\tname=\"subjectLine\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"60\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.handleSubjectScroll}\n\t\t\t\t\t\t\t\t\t\tid=\"subject-input\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form__row\">\n\t\t\t\t\t\t\t\t<div className=\"form__highlighter-wrapper\">\n\t\t\t\t\t\t\t\t\t<Highlighter\n\t\t\t\t\t\t\t          activeClassName=\"highlighter__active\"\n\t\t\t\t\t\t\t          activeIndex={-1}\n\t\t\t\t\t\t\t          caseSensitive={false}\n\t\t\t\t\t\t\t          className=\"form__highlight-screen form__highlight-screen--textarea\"\n\t\t\t\t\t\t\t          highlightClassName=\"highlighter__highlight\"\n\t\t\t\t\t\t\t          highlightStyle={{ fontWeight: 'normal' }}\n\t\t\t\t\t\t\t          sanitize={latinize}\n\t\t\t\t\t\t\t          searchWords={this.props.totalSpamTriggersDetected}\n\t\t\t\t\t\t\t          textToHighlight={this.props.content}\n\t\t\t\t\t\t\t          id=\"content-screen\"\n\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t        </div> \n\t\t\t\t\t\t\t\t<div className=\"form__column\">\n\t\t\t\t\t\t\t\t\t<label className=\"form__label h2\" htmlFor=\"content\">Body Content</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\trows=\"10\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form__input form__input--textarea\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter you content here...\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.context.content}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeContent}\n\t\t\t\t\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"500\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.handleContentScroll}\n\t\t\t\t\t\t\t\t\t\tid=\"content-input\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form__row\">\n\t\t\t\t\t\t\t    <div className=\"form__highlighter-wrapper\">\n\t\t\t\t\t\t\t\t\t<Highlighter\n\t\t\t\t\t\t\t          activeClassName=\"highlighter__active\"\n\t\t\t\t\t\t\t          activeIndex={-1}\n\t\t\t\t\t\t\t          caseSensitive={false}\n\t\t\t\t\t\t\t          className=\"form__highlight-screen form__highlight-screen--text\"\n\t\t\t\t\t\t\t          highlightClassName=\"highlighter__highlight\"\n\t\t\t\t\t\t\t          highlightStyle={{ fontWeight: 'normal' }}\n\t\t\t\t\t\t\t          sanitize={latinize}\n\t\t\t\t\t\t\t          searchWords={this.props.totalSpamTriggersDetected}\n\t\t\t\t\t\t\t          textToHighlight={this.props.cta}\n\t\t\t\t\t\t\t          id=\"cta-screen\"\n\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t\t    </div> \n\t\t\t\t\t\t\t\t<div className=\"form__column\">\n\t\t\t\t\t\t\t\t\t<label className=\"form__label h2\" htmlFor=\"subjectLine\">CTA</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form__input\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your CTA here...\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.context.cta}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeCta}\n\t\t\t\t\t\t\t\t\t\tname=\"cta\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"45\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.handleCtaScroll}\n\t\t\t\t\t\t\t\t\t\tid=\"cta-input\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t)\n\t}\n}\n\nexport default TestForm","import React, { Component } from 'react';\nimport { Consumer } from '../Context';\n\n\nclass Header extends Component{\n\n\trender(){\n\n\t\treturn(\n\n\t\t\t<Consumer>\n\t\t\t\t{context => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<header className=\"header app__row\">\n\t\t\t\t\t\t\t<div className=\"app__column\">\n\t\t\t\t\t\t\t\t<a href=\"https://ricodesantis.com\"><img className=\"header__logo\" alt=\"RD Development Logo\" src=\"https://ed13f.github.io/email-spam-tool/public/images/RD-logo-grey-650-dark.png\" /></a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"app__column\">\n\t\t\t\t\t\t\t\t<h1 className=\"header__title\">Email Marketing Spam Tool</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t          \t</header>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nexport default Header","import React, { Component } from 'react'\nimport '../App.scss'\nimport { Provider } from '../Context';\nimport WarningList from './WarningList'\nimport TestForm from './TestForm'\nimport Header from './Header'\n\n\nconst isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);\nsetTimeout(() => { alert(\"Copy/Paste the demo content in any input: 'Great deals with 100% transparency!! Take advantage of these cheap deals now before they expire!'\") }, 1000)\n\nclass App extends Component {\n  //state\n  state = {\n    content: '',\n    subjectLine: '',\n    cta: '',\n    spamFilter:[\"#1\", \"100%\", \"Act now\", \"Action\", \"Additional income\", \"Affordable\", \"All natural\", \"All new\", \"Amazed\", \"Apply now\", \"Avoid\", \"Be amazed\", \"Be your own boss\", \"Beneficiary\", \"Billing\", \"Billion\", \"Bonus\", \"Boss\", \"Buy\", \"Call now\", \"Call free\", \"Cancel\", \"Cash\", \"Casino\", \"Certified\", \"Cheap\", \"Click here\", \"Clearance\", \"Collect\", \"Compare rates\", \"Congratulations\", \"Credit card\", \"Credit check\", \"Credit offers\", \"Cures\", \"Deal\", \"Dear friend\", \"Dear somebody\", \"Debt\", \"Discount\", \"Direct email\", \"Don't hesitate\", \"Don't delete\", \"Double your income\", \"Double your cash\", \"Earn\", \"Extra\", \"Expire\", \"Fantastic\", \"Free access\", \"Free money\", \"Free gift\", \"Freedom\", \"Friend\", \"Get it now\", \"Get it started\", \"Get it paid\", \"Great\", \"Guarantee\", \"Hello\", \"Income\", \"Increase sales\", \"Increase traffic\", \"Instant\", \"Investment\", \"Junk\", \"Limited\", \"Lose\", \"Lowest price\", \"Luxury\", \"Make money\", \"Medicine\", \"Money\", \"Name\", \"No credit check\", \"No experience\", \"Now\", \"Obligation\", \"Offer\", \"Only\", \"Open\", \"Order now\", \"Please\", \"Presently\", \"Problem\", \"Promise\", \"Purchase\", \"Quote\", \"Rates\", \"Refinance\", \"Refund\", \"Remove\", \"Request\", \"Risk-free\", \"Sales\", \"Satisfaction\", \"Save\", \"Score\", \"Serious\", \"Spam\", \"Success\", \"Supplies\", \"Take action\", \"Terms\", \"Traffic\", \"Trial\", \"Unlimited\", \"Urgent\", \"Weight\", \"While supplies last\", \"Win\", \"Winner\"],\n    spamTriggersDetected:[],\n    totalSpamTriggersDetected:[],\n    mobileShowList:false,\n  }\n\n  //Handle Content On Change\n  handleContentTest = (inputs) => {\n    let content = inputs\n    let spamWords = this.state.totalSpamTriggersDetected;\n    this.runSpamFilter(content, spamWords)\n    this.setState( prevState => {\n      return {\n        content: content,\n        totalSpamTriggersDetected: spamWords,\n      }\n    }, () => {\n      this.updateAllInputForSpam()\n    })\n  }\n\n  //Handle Subject On Change\n  handleSubjectTest = (input) => {\n    let subject = input\n    let spamWords = this.state.totalSpamTriggersDetected\n    this.runSpamFilter(subject, spamWords)\n    this.setState( prevState => {\n      return {\n        subjectLine: subject,\n        totalSpamTriggersDetected: spamWords,\n      }\n    }, () => {\n      this.updateAllInputForSpam()\n    })\n  }\n\n  //Handle Subject On Change\n  handleCtaTest = (input) => {\n    let cta = input\n    let spamWords = this.state.totalSpamTriggersDetected\n    this.runSpamFilter(cta, spamWords)\n    this.setState( prevState => {\n      return {\n        cta: cta,\n        totalSpamTriggersDetected: spamWords,\n      }\n    }, () => {\n      this.updateAllInputForSpam()\n    })\n  }\n\n  //Handle Mobile Toggle\n  handleMobileListToggle = () => {\n    let showList = this.state.mobileShowList\n    showList === true ? showList = false : showList = true\n    this.setState( prevState => {\n      return {\n        mobileShowList: showList\n      }\n    });\n\n  }\n\n  runSpamFilter = (input, spamWords) => {\n    let spamFilters = this.state.spamFilter\n    this.checkRemovedWords(spamWords, input)\n    spamFilters.forEach((word, index) => {\n      let wordRegExp = new RegExp(word.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), \"i\");\n      if(wordRegExp.test(input)){\n        let word = wordRegExp.exec(input)[0]\n        if(!spamWords.includes(word)){ spamWords.push(word) }\n      } else {\n        let wordIndex = spamWords.indexOf(word)\n        if(spamWords.includes(word)){ spamWords.splice(wordIndex, 1)  }\n       }\n    })\n  }\n\n  checkRemovedWords = (spamWords, input) => {\n    let subject = this.state.subjectLine\n    let content = this.state.content\n    let cta = this.state.cta\n    spamWords.forEach((word, index) => {\n      if(!input.includes(word)  && !subject.includes(word) && !content.includes(word) && !cta.includes(word) ){ \n        spamWords.splice(index, 1) \n      }\n    })\n  }\n\n  updateAllInputForSpam = () => {\n    let totalSpamWords =[]\n    let subjectSpamWords = this.checkSingleInputForSpam(this.state.subjectLine)\n    totalSpamWords = totalSpamWords.concat(subjectSpamWords)\n    let contentSpamWords = this.checkSingleInputForSpam(this.state.content)\n    totalSpamWords = totalSpamWords.concat(contentSpamWords)\n    let ctaSpamWords = this.checkSingleInputForSpam(this.state.cta)\n    totalSpamWords = totalSpamWords.concat(ctaSpamWords)\n    let uniqueNames = totalSpamWords.reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return a;},[]);\n    this.setState( prevState => {\n      return {\n        totalSpamTriggersDetected:uniqueNames\n      }\n    });\n  }\n\n  checkSingleInputForSpam = (input) => {\n    let spamWords =[]\n    let spamFilters = this.state.spamFilter\n    spamFilters.forEach((word, index) => {\n      let wordRegExp = new RegExp(word.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), \"i\");\n      if(wordRegExp.test(input)){\n        let word = wordRegExp.exec(input)[0]\n        if(!spamWords.includes(word)){ spamWords.push(word) }\n      } \n    })\n    return spamWords\n  }\n\n  render() {\n\n    return (\n\n      <Provider value={{\n        content: this.state.content,\n        subjectLine: this.state.subjectLine,\n        spamFilter:this.state.spamFilter,\n        cta:this.state.cta,\n        totalSpamTriggersDetected: this.state.totalSpamTriggersDetected\n      }}>\n        <div className={isSafari ? \"app safari\" : \"app\"}>\n          <Header />\n          <section className={\"app__row app__dashboard\" + (this.state.mobileShowList ? \" app__dashboard--active\" : \"\" ) }>\n            <div className=\"app__column app__column--flex-2\">\n              <TestForm \n                handleContentTest={this.handleContentTest} \n                handleSubjectTest={this.handleSubjectTest} \n                handleCtaTest={this.handleCtaTest} \n                content={this.state.content} \n                subject={this.state.subjectLine} \n                cta={this.state.cta} \n                totalSpamTriggersDetected={this.state.totalSpamTriggersDetected}\n              />\n            </div>\n            <div className=\"app__column app__column--flex-1 app__mobile-slider\">\n                <button className=\"app__toggle-slider\" onClick={this.handleMobileListToggle}>{this.state.mobileShowList ? <span className=\"app__toggle-options\"><i className=\"fa fa-angle-right app__toggle-icon\"></i> Hide</span> : <span className=\"app__toggle-options\"><i className=\"fa fa-angle-left app__toggle-icon\"></i> List</span> }</button>\n              <h2 className=\"h2\">Known Spam Words</h2>\n              <WarningList/>\n            </div>\n          </section>\n        </div>\n      </Provider>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './index.scss';\nimport './App.scss';\nimport App from './components/App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}